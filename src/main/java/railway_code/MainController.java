package railway_code;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Autowired
	private StationRepository stationRepository;

	@Autowired
	private CantonRepository cantonRepository;

	@GetMapping(path="/user/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name,
											@RequestParam String last_name,
			@RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName(name);
		n.setLast_name(last_name);
		n.setEmail(email);
		userRepository.save(n);
		return "User Saved";
	}
	
	@GetMapping(path="/user/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
///////////////////////////////////////////////////////////////////////////////

	@GetMapping(path="/station/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name,
											@RequestParam String cantonId) {
		Station n = new Station();
		n.setName(name);
		Canton thisCanton = cantonRepository.findOne(Long.parseLong(cantonId));
		n.setCanton(thisCanton);
		stationRepository.save(n);
		return "Station Saved";
	}

	@GetMapping(path="station/findByID")
	public @ResponseBody Station findStation(@RequestParam String idString){
		Long id = Long.parseLong(idString);
		return (stationRepository.findOne(id));
	}

	@GetMapping(path="station/findByName")
	public @ResponseBody  Iterable<Station>  findStationByName(@RequestParam String stationName){
//		Station n = new Station();
//		Long count = stationRepository.count();
//		stationRepository.findAllByName(stationName);

		return stationRepository.findAllByName(stationName);
	}

	@GetMapping(path="/station/all")
	public @ResponseBody Iterable<Station> getAllStations() {
		// This returns a JSON or XML with the users
		return stationRepository.findAll();
	}


	@GetMapping(path="/canton/add") // Map ONLY GET Requests
	public @ResponseBody String addNewCanton (@RequestParam String name) {
		Canton n = new Canton();
		n.setCantonName(name);
		cantonRepository.save(n);
		return "Canton Saved";
	}

}
